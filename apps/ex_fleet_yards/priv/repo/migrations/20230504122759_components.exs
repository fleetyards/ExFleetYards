defmodule ExFleetYards.Repo.Migrations.Components do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:components, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :name, :text
      add :slug, :text, null: false
      add :component_class, :text
      add :size, :text
      add :item_type, :text
      add :description, :text
      add :sote_image, :text
      add :grade, :text
      add :item_class, :bigint
      add :tracking_signal, :bigint
      add :type_data, :text
      add :durability, :text
      add :power_connection, :text
      add :heat_connection, :text
      add :ammunition, :text
      add :sc_identifier, :text
      add :rsi_id, :bigint
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :manufacturer_id,
          references(:manufacturers,
            column: :id,
            name: "components_manufacturer_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create unique_index(:components, [:slug], name: "components_unique_slug_index")
  end

  def down do
    drop_if_exists unique_index(:components, [:slug], name: "components_unique_slug_index")

    drop constraint(:components, "components_manufacturer_id_fkey")

    drop table(:components)
  end
end